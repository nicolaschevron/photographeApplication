<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:security="http://www.springframework.org/schema/security"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
        http://www.springframework.org/schema/security 
        http://www.springframework.org/schema/security/spring-security-3.2.xsd">
    
    <bean name="propertyPlaceholder" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:test-reporting.properties</value>
            </list>
        </property>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
    </bean>
    <bean id="messageSource"
        class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames" value="classpath:messages,reporting" />
        <property name="defaultEncoding" value="UTF-8" />
    </bean>
    
    <import resource="classpath*:applicationContext-common.xml" />
    <import resource="classpath*:test-hibernate.xml" />
    
    <context:component-scan base-package="fr.inra.dsi.reporting.web, fr.inra.dsi.reporting.service.impl, fr.inra.dsi.reporting.ws.mock, fr.inra.dsi.reporting.data, fr.inra.dsi.reporting.exception"/>
    <context:annotation-config base-package="fr.inra.dsi.reporting.web, fr.inra.dsi.reporting.service.impl, fr.inra.dsi.reporting.ws.mock, fr.inra.dsi.reporting.data, fr.inra.dsi.reporting.exception"/>
    
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="fr.inra.dsi.reporting.bean.CustomJacksonObjectMapper" />
                </property>
            </bean>
            <bean class="fr.inra.dsi.reporting.bean.RapportToCsvMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>
    
    <!-- Spring Security -->
    <security:global-method-security pre-post-annotations="enabled">
        <security:expression-handler ref="expressionHandler"/>
    </security:global-method-security>

    <bean id="expressionHandler" class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
        <property name="permissionEvaluator" ref="customPermissionEvaluator"/>
    </bean>
     
    <bean id="customPermissionEvaluator" class="fr.inra.dsi.reporting.security.CustomPermissionEvaluator"/>
    
    <security:http entry-point-ref="regex401CasAuthenticationEntryPoint">
        <security:intercept-url pattern="/**" access="ROLE_AUTHENTICATED"/>
        <security:custom-filter position="CAS_FILTER" ref="casAuthenticationFilter"/>
        <security:logout logout-success-url="/" />
    </security:http>
    
    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="casAuthenticationProvider"></security:authentication-provider>
    </security:authentication-manager>

    <bean id="serviceProperties" class="org.springframework.security.cas.ServiceProperties">
        <property name="service" value="${reporting.cas.auth.servicebaseurl}j_spring_cas_security_check"></property>
        <property name="sendRenew" value="false"></property>
    </bean>

    <bean id="casAuthenticationFilter"
        class="org.springframework.security.cas.web.CasAuthenticationFilter">
        <property name="authenticationManager" ref="authenticationManager"></property>
    </bean>

    <bean id="regex401CasAuthenticationEntryPoint"
        class="fr.inra.dsi.reporting.security.Regex401CasAuthenticationEntryPoint">
        <property name="casAuthenticationEntryPoint" ref="casAuthenticationEntryPoint"/>
        <property name="regexUrl" value=".*/j_spring_cas_security_.*"/>
    </bean>
    <bean id="casAuthenticationEntryPoint"
        class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
        <property name="loginUrl" value="${reporting.cas.auth.login}"></property>
        <property name="serviceProperties" ref="serviceProperties"></property>
    </bean>

    <bean id="casAuthenticationProvider"
        class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
        <property name="userDetailsService" ref="customUserDetailsService"></property>
        <property name="serviceProperties" ref="serviceProperties"></property>
        <property name="ticketValidator">
            <bean
                class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
                <constructor-arg index="0" value="${reporting.cas.auth.server}"></constructor-arg>
            </bean>
        </property>
        <property name="key" value="cas"></property>
    </bean>
    
    <bean id="singleLogoutFilter" class="org.jasig.cas.client.session.SingleSignOutFilter"/>
    <bean id="requestSingleLogoutFilter" 
        class="org.springframework.security.web.authentication.logout.LogoutFilter">
        <constructor-arg value="${reporting.cas.auth.logout}"/>
        <constructor-arg>
            <bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>
        </constructor-arg>
        <property name="filterProcessesUrl" value="/j_spring_cas_security_logout"/>
    </bean>
    
    <bean id="customUserDetailsService" class="fr.inra.dsi.reporting.security.UserCasServiceImpl">
    </bean>
    
    
</beans>